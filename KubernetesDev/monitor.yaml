---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  name: sim-k8s-agent
  namespace: ad-devops
spec:
  template:
    metadata:
      labels:
        name: sim-k8s-agent
    spec:
      containers:
      - env:
        - name: APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY
          valueFrom:
              configMapKeyRef:
                name: controller-config
                key: ACCOUNT_ACCESS_KEY
        - name: APPDYNAMICS_AGENT_ACCOUNT_NAME
          valueFrom:
              configMapKeyRef:
                name: controller-config
                key: ACCOUNT_NAME
        - name: APPLICATION_NAME
          valueFrom:
              configMapKeyRef:
                name: controller-config
                key: APPLICATION_NAME
        - name: APPDYNAMICS_CONTROLLER_HOST_NAME
          valueFrom:
              configMapKeyRef:
                name: controller-config
                key: CONTROLLER_HOST
        - name: APPDYNAMICS_CONTROLLER_PORT
          valueFrom:
              configMapKeyRef:
                name: controller-config
                key: CONTROLLER_PORT
        - name: APPDYNAMICS_CONTROLLER_SSL_ENABLED
          valueFrom:
              configMapKeyRef:
                name: controller-config
                key: CONTROLLER_SSL_ENABLED
        - name: EVENT_ENDPOINT
          valueFrom:
              configMapKeyRef:
                name: controller-config
                key: EVENT_ENDPOINT
        - name: FULL_ACCOUNT_NAME
          valueFrom:
              configMapKeyRef:
                name: controller-config
                key: FULL_ACCOUNT_NAME
        - name: APPDYNAMICS_MACHINE_HIERARCHY_PATH
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: METRIC_LIMIT
          value: "2000"
        image: 632713433352.dkr.ecr.us-west-2.amazonaws.com/ma_docker_monitor:4.4.3.1061
        imagePullPolicy: Always
        name: sim-k8s-agent
        resources: {}
        volumeMounts:
        - mountPath: /hostroot
          name: hostroot
          readOnly: true
        - mountPath: /var/run/docker.sock
          name: docker-sock
      restartPolicy: Always
      volumes:
      - name: hostroot
        hostPath:
          path: /
          type: Directory
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
          type: Socket
